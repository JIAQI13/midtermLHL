<!DOCTYPE html>
<html lang="en">

<head>
  <title>Home Page</title>

  <link rel="stylesheet" href="/vendor/normalize-4.1.1.css" type="text/css" />
  <link rel="stylesheet" href="/vendor/border-box.css" type="text/css" />
  <link rel="stylesheet" href="/styles/layout.css" type="text/css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w=="
    crossorigin="anonymous" />

  <script type="text/javascript" src="/vendor/jquery-3.0.0.js"></script>
  <script type="text/javascript" src='/scripts/app.js'></script>

  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    crossorigin="" />

  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
    integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
    crossorigin=""></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"
    integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous" />


</head>

<header>
  <nav class="navbar navbar-expand-md navbar-dark bg-success">
    <a class="navbar-brand" href="/urls">WikiMap</a>

    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup"
      aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav">
        <a class="nav-item nav-link" href="/login/">Create New Map</a>
      </div>
      <div class="navbar-nav ml-auto">
        <a id='login' class="nav-item nav-link ml-auto" href="/login/Bob">Login</a>
      </div>
    </div>
  </nav>
</header>

<body>
  <section id="top">

    <div id="mapid"></div>

    </div id="form">
    <form method="POST">

      <div>
        <label for="title-input">Title:</label>
      </div>
      <div>
        <input id="title-input" type="text"><br>
      </div>
      <div>
        <label for="description-input">Description:</label>
      </div>
      <div>
        <input id="description-input" type="text"><br>
      </div>
      <div>
        <input type="file"
       id="image-input"
       accept="image/png, image/jpeg">
      </div>
      <button id="button-submit" type="button">Save Changes</button>
    </form>
  </section>
  <section id="mapContainer">
    <div class="square-view-all-maps">
      <h3 class="heading">All Maps</h3>
      <!-- form -->
    </div>
    <div class="square-fav-maps">
      <h3 class="heading">Favorite Maps</h3>
    </div>
    <div class="square-user-contributions">
      <h3 class="heading">square-user-contributions</h3>
    </div>
  </section>




<!-- GOOGLE API MAPS VERSION -->
  <script>

    function initMap() {
      const options = {
        zoom: 8,
        center: { lat: 42.3601, lng: -71.0589 }
      }

      // New Map
      const mapid = new google.maps.Map(document.getElementById('mapid'), options)



      // array of maarkers This will be data from our database
      let markers = [
        {
          coords: { lat: 42.4668, lng: -70.494 },
          content: `<h1>TEST TEST</h1><input type='button' value='Delete this marker' class='marker-delete-button'/>`
        }
      ]

      // LOOP THROUGH MARKERS THEN PLOTS THEM ONTO MAP
      for (let i = 0; i < markers.length; i++) {
        addMarker(markers[i])
      }




      // ADD MARKER FUNCTION
      function addMarker(props) {
        let marker = new google.maps.Marker({
          position: props.coords,
          map: mapid,
        });
      }


      //  ADD MARKER BY CLICKING ON MAP
      google.maps.event.addListener(mapid, 'click', function(event) {
        placeMarker(event.latLng);
      });

      function placeMarker(location) {
        let marker = new google.maps.Marker({
          position: location,
          map: mapid,
        });
      }
    }

  </script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCC_itgeiXrrCNG50bae3QcQ5rM9fdGd68&callback=initMap"
type="text/javascript"></script>

<!-- API KEY
AIzaSyCC_itgeiXrrCNG50bae3QcQ5rM9fdGd68 -->




<!-- LEAFLET VERSION -->
<!-- <script>


  //  NEW MAP
  const mymap = L.map("mapid").setView([51.505, -0.09], 13);
  const tileUrl = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";
  const attribution =
  '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
  const tiles = L.tileLayer(tileUrl, { attribution });
  tiles.addTo(mymap);





// CREATE MARKER WHEREVER YOU CLICK
  mymap.on('click', function(e){
    let marker = new L.marker(e.latlng).addTo(mymap);
    function addMarker(e){

let newMarker = new L.marker(e.latlng).addTo(mymap);
}
marker.bindPopup("<input type='button' value='Delete' class='deleteButton'/><br><input type='button' value='Edit' class='editButton'/>").openPopup();
marker.on("popupopen", onPopupOpen);
return marker;
});

// DELETE BUTTON FUNCTIONALITY
function onPopupOpen() {
    let tempMarker = this;

    // To remove marker on click of delete button in the popup of marker
    $(".deleteButton:visible").click(function () {
      mymap.removeLayer(tempMarker);
    });
  }
</script>


<div id="mapid"></div> -->


</body>










<!-- <script>

  OLD VERSION

  const mymap = L.map("mapid").setView([51.505, -0.09], 13);

  const tileUrl = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";

  const attribution =
    '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';

  const tiles = L.tileLayer(tileUrl, { attribution });

  tiles.addTo(mymap);

  mymap.on("click", onMapClick);

  function onMapClick(e) {
    var geojsonFeature = {
      type: "Feature",
      properties: {},
      geometry: {
        type: "Point",
        coordinates: [e.latlng.lat, e.latlng.lng],
      },
    };

    var marker;

    L.geoJson(geojsonFeature, {
      pointToLayer: function (feature, latlng) {
        marker = L.marker(e.latlng, {
          title: "Resource Location",
          alt: "Resource Location",
          riseOnHover: true,
          draggable: true,
        }).bindPopup(
          "<input type='button' value='Delete this marker' class='marker-delete-button'/><br><input type='button' value='Edit this marker' class='marker-edit-button'/>"
        );

        marker.on("popupopen", onPopupOpen);

        return marker;
      },
    }).addTo(mymap);
  }

  function onPopupOpen() {
    var tempMarker = this;

    // To remove marker on click of delete button in the popup of marker
    $(".marker-delete-button:visible").click(function () {
      mymap.removeLayer(tempMarker);
    });


  }

  // getting all the markers at once
  function getAllMarkers() {
    var allMarkersObjArray = []; // for marker objects
    var allMarkersGeoJsonArray = []; // for readable geoJson markers

    $.each(mymap._layers, function (ml) {
      if (mymap._layers[ml].feature) {
        allMarkersObjArray.push(this);
        allMarkersGeoJsonArray.push(JSON.stringify(this.toGeoJSON()));
      }
    });

    console.log(allMarkersObjArray);
  }
</script> -->

</html>
